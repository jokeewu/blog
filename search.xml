<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>前端规范</title>
      <link href="/2018/06/25/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/"/>
      <url>/2018/06/25/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/</url>
      <content type="html"><![CDATA[<p>对于不同的企业有不同的前端（代码/文件目录/打包发布）规范，其下为个人习得或习惯。</p><h1 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="文档统一采用UTF-8编写-设置IDE"><a href="#文档统一采用UTF-8编写-设置IDE" class="headerlink" title="文档统一采用UTF-8编写(设置IDE)"></a>文档统一采用<code>UTF-8</code>编写(设置IDE)</h3><h3 id="代码缩进采用4个空格"><a href="#代码缩进采用4个空格" class="headerlink" title="代码缩进采用4个空格"></a>代码缩进采用4个空格</h3><h3 id="一个标签多个属性-导致折行-，每个属性单独成行"><a href="#一个标签多个属性-导致折行-，每个属性单独成行" class="headerlink" title="一个标签多个属性(导致折行)，每个属性单独成行"></a>一个标签多个属性(导致折行)，每个属性单独成行</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-prop1</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-prop2</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-prop3</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-prop4</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">...</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="注释的使用"><a href="#注释的使用" class="headerlink" title="注释的使用"></a>注释的使用</h3><ol><li>用于模块开始和结束</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 模块名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /模块名 --&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>用于说明</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是一个组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"component"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>暂存代码（可能下次需要）</li></ol><h3 id="外链样式文件放在head标签之中-外链JS文件放在body结束标签之前"><a href="#外链样式文件放在head标签之中-外链JS文件放在body结束标签之前" class="headerlink" title="外链样式文件放在head标签之中, 外链JS文件放在body结束标签之前"></a>外链样式文件放在head标签之中, 外链JS文件放在body结束标签之前</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ... --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用标签语意化"><a href="#使用标签语意化" class="headerlink" title="使用标签语意化"></a>使用标签语意化</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ... --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标签正确嵌套"><a href="#标签正确嵌套" class="headerlink" title="标签正确嵌套"></a>标签正确嵌套</h3><ol><li>两个标签不能交叉嵌套</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// Error</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>一般情况下，行内元素不能嵌套块级元素</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// BAD</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="遵照HTML5声明文档类型"><a href="#遵照HTML5声明文档类型" class="headerlink" title="遵照HTML5声明文档类型"></a>遵照HTML5声明文档类型</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><h3 id="元信息设置"><a href="#元信息设置" class="headerlink" title="元信息设置"></a>元信息设置</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 根据实际情况调整 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其他有利于SEO信息，如: keywords,description等 --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标签及属性名均采用小写，且属性值采用双引号-“”-，自定义属性以data-开头"><a href="#标签及属性名均采用小写，且属性值采用双引号-“”-，自定义属性以data-开头" class="headerlink" title="标签及属性名均采用小写，且属性值采用双引号(“”)，自定义属性以data-开头"></a>标签及属性名均采用小写，且属性值采用双引号(“”)，自定义属性以<code>data-</code>开头</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"module"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-prop-name</span>=<span class="string">"&lt;propName&gt;"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS-LESS-SASS等"><a href="#CSS-LESS-SASS等" class="headerlink" title="CSS/LESS/SASS等"></a>CSS/LESS/SASS等</h2><h3 id="css代码位置"><a href="#css代码位置" class="headerlink" title="css代码位置"></a>css代码位置</h3><p>一般情况下css代码放置于单独文件，外部链接进html文件，特殊情况（页面简单等）下也可将其放入<code>style</code>标签，正常情况下不应在标签上设置样式。<br>在css中不使用<code>@import</code>，除开LESS/SASS文件中。</p><h3 id="样式的写法"><a href="#样式的写法" class="headerlink" title="样式的写法"></a>样式的写法</h3><p>本人一般采用OO结合BEM的写法，OO定义基本的原子类，便于组合，<a href="http://getbem.com/introduction/" target="_blank" rel="noopener">BEM</a>具有一定的模块化封装性。</p><h3 id="id与class定义"><a href="#id与class定义" class="headerlink" title="id与class定义"></a>id与class定义</h3><ul><li>id采用驼峰形式，如：<code>#fullName</code></li><li>class采用小写字母加中划线（-）或下划线（_）,详情说明参考<a href="http://getbem.com/introduction/" target="_blank" rel="noopener">BEM</a>，如：<code>.btn--primary, .user__avatar--small</code></li><li>JS中使用class，以<code>js-</code>开头</li></ul><h3 id="样式属性顺序-尺寸-gt-形状-gt-内填充-外边距-gt-文字-gt-位置等（不严格按照这顺序）"><a href="#样式属性顺序-尺寸-gt-形状-gt-内填充-外边距-gt-文字-gt-位置等（不严格按照这顺序）" class="headerlink" title="样式属性顺序:尺寸-&gt;形状-&gt;内填充/外边距-&gt;文字-&gt;位置等（不严格按照这顺序）"></a>样式属性顺序:尺寸-&gt;形状-&gt;内填充/外边距-&gt;文字-&gt;位置等（不严格按照这顺序）</h3><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li>大的模块/分段</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ==================================</span></span><br><span class="line"><span class="comment"> * 模块名称, 如：原子类/重置类等</span></span><br><span class="line"><span class="comment"> * 描述信息</span></span><br><span class="line"><span class="comment"> * ==================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> <span class="selector-class">.mb15</span> &#123;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>样式属性说明</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 说明 */</span></span><br><span class="line"><span class="selector-class">.className</span> &#123;</span><br><span class="line">  <span class="comment">/* 说明 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性值缩写，如：颜色，font，background等"><a href="#属性值缩写，如：颜色，font，background等" class="headerlink" title="属性值缩写，如：颜色，font，background等"></a>属性值缩写，如：颜色，font，background等</h3><h3 id="样式换行"><a href="#样式换行" class="headerlink" title="样式换行"></a>样式换行</h3><ul><li>不同属性单独成行</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-class">.className</span> &#123;<span class="attribute">font-size</span>: <span class="number">12px</span>;<span class="attribute">color</span>: <span class="number">#ff0000</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.className</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>多个class共同样式，不同类名单独成行</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-class">.className1</span>,<span class="selector-class">.className2</span> &#123;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.className1</span>,</span><br><span class="line"><span class="selector-class">.className2</span> &#123;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="基础规范"><a href="#基础规范" class="headerlink" title="基础规范"></a>基础规范</h3><p>使用es6+相关语法，同时polyfill，最后采用babel转码。</p><ul><li>变量定义</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义变量用let，常量用const</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量，驼峰命名法</span></span><br><span class="line"><span class="keyword">let</span> fullName = <span class="string">'Jacky'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量</span></span><br><span class="line"><span class="keyword">const</span> API_ROOT = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多个变量，多个let</span></span><br><span class="line"><span class="keyword">let</span> var1 = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">let</span> var2 = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> var1 = <span class="string">''</span>,</span><br><span class="line">    var2 = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><ul><li>构造函数首字母大写</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>空格使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 运算符前后加入空格</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> c = a + b;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组项之间</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">'item1'</span>, <span class="string">'item2'</span>, <span class="string">'item3'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象字面量key/value间</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  prop1: <span class="string">'prop1'</span>,</span><br><span class="line">  prop2: <span class="string">'prop2'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数名与括号间，参数间，函数体左括号与参数右括号间</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span> (<span class="params">name, content</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 条件</span></span><br><span class="line"><span class="keyword">if</span> (age === <span class="number">20</span>) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>采用<code>2个</code>空格进行代码缩进</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">if</span> (space === <span class="number">4</span>) &#123;</span><br><span class="line">    alert(<span class="string">'4个空格'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">if</span> (space === <span class="number">2</span>) &#123;</span><br><span class="line">  alert(<span class="string">'2个空格'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>语句结束必须使用分号(;)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul><li>箭头函数括号使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> func1 = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b;</span><br><span class="line"><span class="keyword">let</span> func2 = <span class="function"><span class="params">a</span> =&gt;</span> a + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> func1 = <span class="function">(<span class="params">a, b</span>) =&gt;</span> (a + b);</span><br><span class="line"><span class="keyword">let</span> func2 = <span class="function">(<span class="params">a</span>) =&gt;</span> (a + <span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>注释的使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 块级注释 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 函数/方法注释</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; fullName</span></span><br><span class="line"><span class="comment"> * @return &#123;String&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span> (<span class="params">fullName</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 行注释</span></span><br><span class="line"><span class="keyword">let</span> internal = <span class="literal">null</span>; <span class="comment">// 变量</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="comment">// 属性说明</span></span><br><span class="line">  prop1: <span class="string">''</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************</span></span><br><span class="line"><span class="comment"> * 功能块分隔</span></span><br><span class="line"><span class="comment"> ******************************/</span></span><br></pre></td></tr></table></figure><ul><li>避免使用过多的全局变量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 采用命名空间(namespace)</span></span><br><span class="line"><span class="keyword">let</span> utils = &#123;&#125;;</span><br><span class="line">utils.date = &#123;&#125;;</span><br><span class="line">utils.currency = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 采用IFFF（自执行函数）包裹代码块</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h3 id="库-框架"><a href="#库-框架" class="headerlink" title="库/框架"></a>库/框架</h3><h4 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h4><ul><li>jQuery对象变量名称以$开头</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> $fullName = $(<span class="string">'#fullName'</span>)</span><br></pre></td></tr></table></figure><ul><li>多次使用的jQuery对象变量缓存</li><li>查询元素，缩小范围，减少选择器复杂度通过find</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line">$(<span class="string">'form input'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line">$(<span class="string">'form'</span>).find(<span class="string">'.input'</span>);</span><br></pre></td></tr></table></figure><ul><li>方法链式调用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.blk'</span>)</span><br><span class="line">  .html(<span class="string">'hello'</span>)</span><br><span class="line">  .css(&#123;</span><br><span class="line">    <span class="string">'background-color'</span>: <span class="string">'#ff0000'</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><ul><li>css操作用class,不直接操作属性</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line">$(<span class="string">'.blk'</span>).css(&#123;</span><br><span class="line">  color: <span class="string">'#ff0000'</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line">$(<span class="string">'.blk'</span>).addClass(<span class="string">'active'</span>);</span><br></pre></td></tr></table></figure><ul><li>绑定列表元素事件采用事件委托</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.list'</span>).on(<span class="string">'click'</span>, <span class="string">'.list-item'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>减少DOM操作，使用字符串拼接（join）,然后一次性append</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> $list = $(<span class="string">'.list'</span>);</span><br><span class="line"><span class="keyword">let</span> listItemStrs = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  listItemStrs.push(<span class="string">`&lt;li&gt;<span class="subst">$&#123;i&#125;</span>&lt;/li&gt;`</span>);</span><br><span class="line">  <span class="comment">// 不推荐</span></span><br><span class="line">  <span class="comment">// $list.append(`&lt;li&gt;$&#123;i&#125;&lt;/li&gt;`);</span></span><br><span class="line">&#125;</span><br><span class="line">$list.append(listItemStrs.join(<span class="string">''</span>));</span><br></pre></td></tr></table></figure><ul><li>ajax回调采用Promise</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// success callback</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// fail callback</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h4><ul><li>组件书写采用单文件</li></ul><h4 id="React"><a href="#React" class="headerlink" title="React"></a>React</h4><ul><li>组件书写采用单文件</li></ul><h1 id="文件目录规范"><a href="#文件目录规范" class="headerlink" title="文件目录规范"></a>文件目录规范</h1><h2 id="SPA-单页应用"><a href="#SPA-单页应用" class="headerlink" title="SPA (单页应用)"></a>SPA (单页应用)</h2><pre>project_dir  src    assets      images      styles      ...    components      Banner        index.js    utils      date.js      currency.js      ...    pages      order        Detail.js        List.js        ...    index.js</pre><h2 id="MPA-多页应用"><a href="#MPA-多页应用" class="headerlink" title="MPA (多页应用)"></a>MPA (多页应用)</h2><pre>project_dir  src    assets      images      styles      scripts      ...    pages      page1.js      page2.js      ...    tpls      page1.html      page2.html      ...```</pre><h1 id="打包发布"><a href="#打包发布" class="headerlink" title="打包发布"></a>打包发布</h1><p>基于现在情况，本公司现在打包基本上采用<code>webpack</code>及相关插件予以实现，采用前端针对开发和生产环境分别打包并生成zip文件（存放在git中）交由后端开发人员部署。</p><p>需用到以下工具：</p><ul><li>node packages：cross-env</li><li>webpack plugins: webpack.definePlugin/zip-webpack-plugin</li></ul><p>当然可以采用jenkins优化发布过程。可以参见<a href="/2018/04/18/Jenkins+Github持续集成/">《Jenkins+Github持续集成》</a></p>]]></content>
      
      
        <tags>
            
            <tag> 规范 </tag>
            
            <tag> 代码规范 </tag>
            
            <tag> 打包 </tag>
            
            <tag> 发布 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>原型与原型链</title>
      <link href="/2018/05/23/%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
      <url>/2018/05/23/%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/</url>
      <content type="html"><![CDATA[<p>一张图看清JavaScript原型脉络:</p><img src="/2018/05/23/原型与原型链/prototype.jpeg"><p>留个问题：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype === <span class="built_in">Function</span>.__proto__ <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.__proto__ === <span class="built_in">Function</span>.prototype <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>以上代码如何解释?</p>]]></content>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> prototype </tag>
            
            <tag> 原型 </tag>
            
            <tag> 原型链 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>优秀集锦</title>
      <link href="/2018/05/21/%E4%BC%98%E7%A7%80%E9%9B%86%E9%94%A6/"/>
      <url>/2018/05/21/%E4%BC%98%E7%A7%80%E9%9B%86%E9%94%A6/</url>
      <content type="html"><![CDATA[<h1 id="优秀Github账户"><a href="#优秀Github账户" class="headerlink" title="优秀Github账户"></a>优秀Github账户</h1><ul><li><a href="https://github.com/mqyqingfeng" target="_blank" rel="noopener">mqyqingfeng</a></li></ul><h1 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h1><ul><li><a href="http://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html" target="_blank" rel="noopener">undefined与null的区别</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>webpack打包多页应用</title>
      <link href="/2018/04/23/webpack%E6%89%93%E5%8C%85%E5%A4%9A%E9%A1%B5%E5%BA%94%E7%94%A8/"/>
      <url>/2018/04/23/webpack%E6%89%93%E5%8C%85%E5%A4%9A%E9%A1%B5%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[]]></content>
      
      
        <tags>
            
            <tag> Bundler </tag>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jenkins+Github持续集成</title>
      <link href="/2018/04/18/Jenkins+Github%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
      <url>/2018/04/18/Jenkins+Github%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</url>
      <content type="html"><![CDATA[<p>源于对现在部署方案的不满。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>Github账号及测试项目</li><li>网络服务器一台，用于Github通过Webhooks调用通知</li><li>网络服务器需安装<a href="https://nodejs.org/" target="_blank" rel="noopener">Node</a>,<a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noopener">Git</a>,<a href="https://jenkins.io/doc/pipeline/tour/getting-started/" target="_blank" rel="noopener">Jenkins</a></li></ul><h3 id="配置Github项目Webhooks"><a href="#配置Github项目Webhooks" class="headerlink" title="配置Github项目Webhooks"></a>配置Github项目Webhooks</h3><p>Step1: Github进入项目 &gt; Settings</p><img src="/2018/04/18/Jenkins+Github持续集成/github-step1.jpeg"><p>Step2: 选择Webhooks</p><img src="/2018/04/18/Jenkins+Github持续集成/github-step2.jpeg"><p>其中Secret来源于Jenkins系统，用户 &gt; [具体用户] &gt; 设置 &gt; API Token</p><img src="/2018/04/18/Jenkins+Github持续集成/jenkins-api-token.jpeg"><h3 id="配置Jenkins"><a href="#配置Jenkins" class="headerlink" title="配置Jenkins"></a>配置Jenkins</h3><p>Step1: 安装Generic Webhook Trigger插件</p><p>系统管理 &gt; 管理插件 &gt; 可选插件 &gt; [输入Generic Webhook Trigger]安装</p><p>Step2: 新建任务</p><p>新建任务</p><img src="/2018/04/18/Jenkins+Github持续集成/create-task.jpeg"><p>任务配置</p><p>Step1: 基础信息/项目类型</p><img src="/2018/04/18/Jenkins+Github持续集成/task-config-step1.jpg"><p>Step2: 源码管理工具</p><img src="/2018/04/18/Jenkins+Github持续集成/task-config-step2.jpg"><p>Step3: 触发器配置</p><img src="/2018/04/18/Jenkins+Github持续集成/task-config-step3.jpg"><p>Step4: 构建过程脚本命令配置</p><img src="/2018/04/18/Jenkins+Github持续集成/task-config-step4.jpg"><p>Step5: 构建邮件通知</p><img src="/2018/04/18/Jenkins+Github持续集成/task-config-step5.jpg"><p>Step6: 测试成功</p><img src="/2018/04/18/Jenkins+Github持续集成/result-success.jpg">]]></content>
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端自动化 </tag>
            
            <tag> 前端构建 </tag>
            
            <tag> 前端部署 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端开发笔记(持续更新)</title>
      <link href="/2018/04/18/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/04/18/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>注：本文用于帮助记忆前端开发遇到的问题及解决方法/方案。<code>为持续更新文章</code></p><h4 id="字体平滑"><a href="#字体平滑" class="headerlink" title="字体平滑"></a>字体平滑</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#app</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="IOS下普通元素绑定点击事件无效"><a href="#IOS下普通元素绑定点击事件无效" class="headerlink" title="IOS下普通元素绑定点击事件无效"></a>IOS下普通元素绑定点击事件无效</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.js-click</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Safari下input-type-”number”-提示”输入有效值”"><a href="#Safari下input-type-”number”-提示”输入有效值”" class="headerlink" title="Safari下input[type=”number”]提示”输入有效值”"></a>Safari下input[type=”number”]提示”输入有效值”</h4><p>当输入小数时，需指定step属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">step</span>=<span class="string">"0.01"</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 兼容性 </tag>
            
            <tag> Bug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>parcel尝试打包多页应用</title>
      <link href="/2018/04/17/parcel%E5%B0%9D%E8%AF%95%E6%89%93%E5%8C%85%E5%A4%9A%E9%A1%B5%E5%BA%94%E7%94%A8/"/>
      <url>/2018/04/17/parcel%E5%B0%9D%E8%AF%95%E6%89%93%E5%8C%85%E5%A4%9A%E9%A1%B5%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>如何安装及如何使用参见<a href="http://www.parceljs.io/" target="_blank" rel="noopener">parcel官网</a>。</p><p>新建文件_main.html(任意名称)作为项目的入口，将项目功能页面以如下方式引入。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 项目功能页面 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"page1.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"page2.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- more --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开发本地预览</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parcel _main.html</span><br></pre></td></tr></table></figure><p>构建打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parcel build _main.html</span><br></pre></td></tr></table></figure><p>在实际开发中打包，本地开发环境搭建是比较繁琐复杂的事情。</p><p>就目前项目打包有如下需求：</p><ul><li><p>本地开发预览</p><p>  以上方法可实现</p></li><li><p>针对不同的环境打包，替换对应的API根路径</p><p>  由于从parcel文档中可以看出还没有类似webpack DefinePlugin功能（创建一个在编译时可以配置的全局常量），目前想到的可用方法，采用字符串替换（通过gulp-replace）。</p></li><li><p>打包成zip压缩包，便于部署</p><p>  针对此项需求采用gulp/gulp-zip实现</p></li></ul><p>综上，对于简单项目的确可以达到零配置。但对于稍复杂项目还是显得有点不足。</p>]]></content>
      
      
        <tags>
            
            <tag> Parcel </tag>
            
            <tag> Bundler </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
